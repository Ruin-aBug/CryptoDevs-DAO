/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CryptoDevsDAO,
  CryptoDevsDAOInterface,
} from "../../contracts/CryptoDevsDAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftMarketPlace",
        type: "address",
      },
      {
        internalType: "address",
        name: "_cryptoDevsNFT",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nftTokenId",
        type: "uint256",
      },
    ],
    name: "createProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalIndex",
        type: "uint256",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "numProposals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "uint256",
        name: "nftTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "yayVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nayVotes",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalIndex",
        type: "uint256",
      },
      {
        internalType: "enum CryptoDevsDAO.Vote",
        name: "vote",
        type: "uint8",
      },
    ],
    name: "voteProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawEther",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610d1c380380610d1c83398101604081905261002f916100d5565b61003833610069565b600380546001600160a01b039384166001600160a01b03199182161790915560048054929093169116179055610108565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100d057600080fd5b919050565b600080604083850312156100e857600080fd5b6100f1836100b9565b91506100ff602084016100b9565b90509250929050565b610c05806101176000396000f3fe6080604052600436106100845760003560e01c80635a43dc00116100565780635a43dc001461016c578063715018a61461018c5780637362377b146101a15780638da5cb5b146101b6578063f2fde38b146101de57005b8063013cf08b1461008d5780630d61b519146101085780633dca3d3414610128578063400e39491461014857005b3661008b57005b005b34801561009957600080fd5b506100d96100a8366004610a83565b6001602081905260009182526040909120805491810154600282015460038301546004909301549192909160ff1685565b6040805195865260208601949094529284019190915260608301521515608082015260a0015b60405180910390f35b34801561011457600080fd5b5061008b610123366004610a83565b6101fe565b34801561013457600080fd5b5061008b610143366004610a9c565b61049f565b34801561015457600080fd5b5061015e60025481565b6040519081526020016100ff565b34801561017857600080fd5b5061015e610187366004610a83565b61077f565b34801561019857600080fd5b5061008b61090a565b3480156101ad57600080fd5b5061008b61091e565b3480156101c257600080fd5b506000546040516001600160a01b0390911681526020016100ff565b3480156101ea57600080fd5b5061008b6101f9366004610ad0565b610963565b600480546040516370a0823160e01b815233928101929092526000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561024c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102709190610af9565b116102965760405162461bcd60e51b815260040161028d90610b12565b60405180910390fd5b8042600160008381526020019081526020016000206001015411156102f55760405162461bcd60e51b8152602060048201526015602482015274111150511312539157d393d517d15610d151511151605a1b604482015260640161028d565b60008181526001602052604090206004015460ff16156103575760405162461bcd60e51b815260206004820152601960248201527f50524f504f53414c5f414c52454144595f455845435554454400000000000000604482015260640161028d565b600082815260016020526040902060038101546002820154111561048d5760035460408051634c6afee560e11b815290516000926001600160a01b0316916398d5fdca9160048083019260209291908290030181865afa1580156103bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e39190610af9565b9050804710156104285760405162461bcd60e51b815260206004820152601060248201526f4e4f545f454e4f5547485f46554e445360801b604482015260640161028d565b600354825460405163efef39a160e01b815260048101919091526001600160a01b039091169063efef39a19083906024016000604051808303818588803b15801561047257600080fd5b505af1158015610486573d6000803e3d6000fd5b5050505050505b600401805460ff191660011790555050565b600480546040516370a0823160e01b815233928101929092526000916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156104ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105119190610af9565b1161052e5760405162461bcd60e51b815260040161028d90610b12565b81426001600083815260200190815260200160002060010154116105885760405162461bcd60e51b8152602060048201526011602482015270111150511312539157d15610d151511151607a1b604482015260640161028d565b6000838152600160205260408082206004805492516370a0823160e01b815233918101919091529092916001600160a01b0316906370a0823190602401602060405180830381865afa1580156105e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106069190610af9565b90506000805b828110156106e45760048054604051632f745c5960e01b81523392810192909252602482018390526000916001600160a01b0390911690632f745c5990604401602060405180830381865afa158015610669573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068d9190610af9565b600081815260058701602052604090205490915060ff166106d157826106b281610b52565b60008381526005880160205260409020805460ff191660011790559350505b50806106dc81610b52565b91505061060c565b50600081116107255760405162461bcd60e51b815260206004820152600d60248201526c1053149150511657d593d51151609a1b604482015260640161028d565b600085600181111561073957610739610b6b565b0361075d57808360020160008282546107529190610b81565b909155506107779050565b808360030160008282546107719190610b81565b90915550505b505050505050565b600480546040516370a0823160e01b8152339281019290925260009182916001600160a01b0316906370a0823190602401602060405180830381865afa1580156107cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f19190610af9565b1161080e5760405162461bcd60e51b815260040161028d90610b12565b6003546040516312dc929d60e31b8152600481018490526001600160a01b03909116906396e494e890602401602060405180830381865afa158015610857573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087b9190610b9a565b6108ba5760405162461bcd60e51b815260206004820152601060248201526f4e46545f4e4f545f464f525f53414c4560801b604482015260640161028d565b60025460009081526001602052604090208281556108da4261012c610b81565b6001820155600280549060006108ef83610b52565b919050555060016002546109039190610bbc565b9392505050565b6109126109d9565b61091c6000610a33565b565b6109266109d9565b600080546040516001600160a01b03909116914780156108fc02929091818181858888f19350505050158015610960573d6000803e3d6000fd5b50565b61096b6109d9565b6001600160a01b0381166109d05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161028d565b61096081610a33565b6000546001600160a01b0316331461091c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610a9557600080fd5b5035919050565b60008060408385031215610aaf57600080fd5b82359150602083013560028110610ac557600080fd5b809150509250929050565b600060208284031215610ae257600080fd5b81356001600160a01b038116811461090357600080fd5b600060208284031215610b0b57600080fd5b5051919050565b60208082526010908201526f2727aa2fa0afa220a7afa6a2a6a122a960811b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600060018201610b6457610b64610b3c565b5060010190565b634e487b7160e01b600052602160045260246000fd5b80820180821115610b9457610b94610b3c565b92915050565b600060208284031215610bac57600080fd5b8151801515811461090357600080fd5b81810381811115610b9457610b94610b3c56fea264697066735822122063e3a75e11cb3beae8117ca067625ca54c08794e7d6dcfda6e356b4f8c1dfc5f64736f6c63430008110033";

type CryptoDevsDAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CryptoDevsDAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CryptoDevsDAO__factory extends ContractFactory {
  constructor(...args: CryptoDevsDAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _nftMarketPlace: PromiseOrValue<string>,
    _cryptoDevsNFT: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CryptoDevsDAO> {
    return super.deploy(
      _nftMarketPlace,
      _cryptoDevsNFT,
      overrides || {}
    ) as Promise<CryptoDevsDAO>;
  }
  override getDeployTransaction(
    _nftMarketPlace: PromiseOrValue<string>,
    _cryptoDevsNFT: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _nftMarketPlace,
      _cryptoDevsNFT,
      overrides || {}
    );
  }
  override attach(address: string): CryptoDevsDAO {
    return super.attach(address) as CryptoDevsDAO;
  }
  override connect(signer: Signer): CryptoDevsDAO__factory {
    return super.connect(signer) as CryptoDevsDAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CryptoDevsDAOInterface {
    return new utils.Interface(_abi) as CryptoDevsDAOInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CryptoDevsDAO {
    return new Contract(address, _abi, signerOrProvider) as CryptoDevsDAO;
  }
}
